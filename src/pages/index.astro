---
import { getCollection } from "astro:content";

// Importation des layouts
import BaseLayout from "../layouts/BaseLayout.astro";

// Importation des composants
import CallToAction from "../components/CallToAction.astro";
import Grid from "../components/Grid.astro";
import Hero from "../components/Hero.astro";
import Icon from "../components/Icon.astro";
import Pill from "../components/Pill.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";

// Page section components
import ContactCTA from "../components/ContactCTA.astro";
import Skills from "../components/Skills.astro";
import Cv from "../components/Cv.astro";
import PinsGit from "../components/PinsGit.astro";

// Content Fetching: List four most recent work projects
const projects = (await getCollection("work"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 4);
---

<BaseLayout>
  <div class="stack gap-20 lg:gap-48">
    <div class="wrapper stack gap-8 lg:gap-20">
      <header class="hero">
        <Hero
          title="Développeuse web // Junior"
          tagline="Actuellement en formation"
          align="start"
        >
          <div class="roles-container">
            <Pill><Icon icon="code" size="1.33em" /> Code </Pill>
            <Pill><Icon icon="color-picker" size="1.33em" />Graphisme</Pill>
            <Pill><Icon icon="pencil-line" size="1.33em" />Rédaction</Pill>
            <Cv>
          </div>
        </Hero>
        <img
          alt="logo de Marion Sabatier"
          src="/assets/logo.png"
        />
      </header>

      <Skills />
    </div>

    <main class="wrapper stack gap-20 lg:gap-48">
      <section class="section with-background with-cta">
        <header class="section-header stack gap-2 lg:gap-4">
          <h3>Mes projets</h3>
          <p>
            Un pêle-mêle de mes réalisations en développement web <br> ainsi que quelques travaux print&nbsp; 
          <a class="link-graphism" href="/graphism/">
          ici 
            <Icon icon="arrows-in" size="1.2em" />
          </a>
        </p>
        </header>

        <div class="gallery">
          <Grid variant="offset">
            {
              projects.map((project) => (
                <li>
                  <PortfolioPreview project={project} />
                </li>
              ))
            }
          </Grid>
        </div>
      </section>

      <div class="cta">
        <CallToAction href="/work/">
          Tout voir
          <Icon icon="arrow-right" size="1.2em" />
        </CallToAction>
      </div>

      <section class="section with-background bg-variant">
        <header class="section-header stack gap-2 lg:gap-4">
          <h3>Mes pins GitHub</h3>
          <p>
            Mes repos préférés qui sont épinglés sur mon profil
            <strong>GitHub</strong>
          </p>
        </header>

        <div class="gallery">
          <PinsGit>
          </div>
       
      </section>
    </main>

    <ContactCTA />
  </div>
</BaseLayout>

<style>
   .hero {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
  }

  .roles {
    display: none;
  }

  .roles-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;
  }

  .hero img {
    padding: 4vw;
    width: auto;
    border-radius: 24px;
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .hero img:hover {
    transform: translateY(-5px);
  }

  :root.theme-dark .hero img {
  filter: brightness(0) invert(1);
  }

   .with-background {
    position: relative;
  }

  .with-background::before {
    --hero-bg: var(--bg-image-subtle-2);

    content: "";
    position: absolute;
    pointer-events: none;
    left: 50%;
    width: 100vw;
    aspect-ratio: calc(2.25 / var(--bg-scale));
    top: 0;
    transform: translateY(-80%) translateX(-50%);
    background:
      url("/assets/backgrounds/noise.png") top center/220px repeat,
      /* var(--hero-bg) center center / var(--bg-gradient-size) no-repeat, */
        var(--gray-999);
    /* background-blend-mode: overlay, normal, normal, normal; */
    mix-blend-mode: var(--bg-blend-mode);
    z-index: -1;
  }

  .with-background.bg-variant::before {
    --hero-bg: var(--bg-image-subtle-1);
  }

  .section-header {
    justify-self: center;
    text-align: center;
    max-width: 50ch;
    font-size: var(--text-md);
    color: var(--gray-300);
  }

  .section-header h3 {
    font-size: var(--text-2xl);
  }

  .link-graphism {
    text-decoration: none;
    color: var(--accent-dark);
    font-weight: bolder;
    font-variant-caps: small-caps;
    font-size: var(--text-xl);
    padding: 0.2em;
    border-radius: 0.25em;
    background: var(--gradient-accent-orange);
    margin: 0.5em;
    transition: var(--theme-transition);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    line-height: 1 ;
    gap: 0.3em;
  }

  .link-graphism :global(svg) {
    margin-top: 0.1em;
    vertical-align: middle;
  }

  :root.theme-dark .link-graphism {
    color: var(--gray-999);
  }

  .link-graphism:hover,
  .link-graphism:focus {
    background: var(--gradient-accent);
    box-shadow: var(--shadow-sm);
    outline: none;
  }

  @media (max-width: 50em) {
    .hero img {
      width: 50%;
    }
    
  }

  @media (min-width: 50em) {
    .hero {
      display: grid;
      grid-template-columns: 6fr 4fr;
      padding-inline: 2.5rem;
      gap: 3.75rem;
    }

    .roles {
      margin-top: 1rem;
      display: flex;
      gap: 1rem;
    }

    .roles-container {
      margin-top: 1rem;
    }

    .section {
      grid-template-columns: repeat(4, 1fr);
      grid-template-areas: "header header header header" "gallery gallery gallery gallery";
      gap: 5rem;
      display: grid;
    }

    .section.with-cta {
      grid-template-areas: "header header header cta" "gallery gallery gallery gallery";
    }

    
    .section-header {
      grid-area: header;
      font-size: var(--text-lg);
    }

    .section-header h3 {
      font-size: var(--text-4xl);
    }

    .with-cta .section-header {
      justify-self: flex-start;
      text-align: left;
    }

    .cta {
      grid-area: cta;
      width: 50%;
    }

    .gallery {
      grid-area: gallery;
    }
  }

 
</style>


